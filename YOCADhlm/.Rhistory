J=length(unique(dataTFGA$teacherid))
remlicc*(J-1)/J
# Rassal Kesim modeli
model1REML<-lme(CABpost~grandcnt+condition,random=~1|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit)
summary(model1REML)
#serbestlik derecesi n*J= 12*50=600
# 2. duzey : J-m0-p2= 50-1-1 (Pinhero&Bates s91 Q=1,m0=1(intercept),m1=50,m2=600,p1=1,p2=1)
# 1. duzey " (TÃ¼m orneklem)-(J+p) = 600-51= 549. Snijders ve Boskere gore 600-1-1 farkeder mi?
anova(model1REML)
model1ML<-lme(CABpost~grandcnt+condition,random=~1|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit,method="ML")
summary(model1ML)
nullmodelML<-lme(CABpost~1,random=~1|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit,method="ML")
anova(nullmodelML,model1ML)
#rassal kesim egim modeli
model1aREML<-lme(CABpost~grandcnt+condition,random=~grandcnt|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit)
summary(model1aREML)
VarCorr(model1aREML)
VarCorr(model1REML)
#varyans homojenligi, varyanslarin homojen olmadigi durumda tahminleyicide modifikasyon gerekir
plot(model1aREML)
#varyans homojenligi, varyanslarin homojen olmadigi durumda tahminleyicide modifikasyon gerekir
plot(model1REML)
#deviance test , rassal egim varyansi
anova(model1,model1a)
# rassal egim varyansini goz ardi ederek pseudo R2
p1a=as.numeric(VarCorr(model1aREML)[3])+as.numeric(VarCorr(model1aREML)[1])
global1a= round(((nop-p1a)/nop),3)*100
#deviance test , rassal egim varyansi
anova(model1REML,model1aREML)
#deviance test ML , rassal egim varyansi
model1aML<-lme(CABpost~grandcnt+condition,random=~grandcnt|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit,method = "ML")
#deviance test , rassal egim varyansi
anova(model1ML,model1aML)
# egim grafikleri
dataTFGA2=dataTFGA[order(dataTFGA$condition),]
dataTFGA2$id2=rep(1:50,each=12)
library(lattice)
xyplot(CABpost~grandcnt|as.factor(id2),data=dataTFGA2,
type=c("p","g","r"),col="black",col.line="black",
xlab="Pre-test",
ylab="Son-test")
xyplot(CABpost~grandcnt|as.factor(id2),data=dataTFGA2,
type=c("p","g","r"),col="black",col.line="black",
xlab="On-test",
ylab="Son-test")
#group mean centering/ kume ortalamasi etrafinda merkezilestirme KOM
require(plyr)
dataTFGA3=dataTFGA
dataTFGA3=ddply(dataTFGA3, "teacherid", transform,  pregmean= mean(CABpre))
dataTFGA3$grpcnt=with(dataTFGA3,CABpre-pregmean)
head(dataTFGA3)
#KOM analizleri rassal kesim
model1b<-lme(CABpost~pregmean+grpcnt+condition,random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit)
summary(model1b)
VarCorr(model1b)
# Raporlanmamis KOM analizleri rassal kesim egim
model1c<-lme(CABpost~pregmean+grpcnt+condition,random=~grpcnt|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit)
summary(model1c)
VarCorr(model1c)
#context effect Esitlik 32
model1e<-lme(CABpost~pregmean+CABpre,random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit)
summary(model1e)
VarCorr(model1e)
##context effect Esitlik 33
model1f<-lme(CABpost~pregmean+grpcnt,random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit)
summary(model1f)
VarCorr(model1f)
##Assumption Check Varsayim kontrolu model1 a
par(mfrow=c(1,1))
plot(model1a,xlab="Tahmin",ylab="Standardize Hata")
plot(model1aREML,xlab="Tahmin",ylab="Standardize Hata")
qqnorm(resid(model1aREML), main="Duzey-1 hata",xlab="teorik deger",ylab = "deger")
qqnorm(ranef(model1aREML)$`(Intercept)`, main="Kesim hata",xlab="teorik deger",ylab = "deger")
qqnorm(ranef(model1aREML)$grandcnt, main="Egim hata",xlab="teorik deger",ylab = "deger")
head(dataTFGA3)
# Interaction?
summary(lme(CABpost~condition+CABpre+CABpre*condition,random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit))
summary(lme(CABpost~condition+pregmean+grpcnt+pregmean*condition+grpcnt*condition,
random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit))
#Veri seti iki WorldBANK Turkiye
load("dataEGBA.Rdata")
head(dataEGBA)
sum(is.na(dataEGBA$K1_iliski))
is.na(dataEGBA$K1_iliski)+is.na(dataEGBA$K2_iliski)
dataEGBA$housememb=is.na(dataEGBA$K1_iliski)+is.na(dataEGBA$K2_iliski)+
is.na(dataEGBA$K3_iliski)+is.na(dataEGBA$K4_iliski)+is.na(dataEGBA$K5_iliski)+
is.na(dataEGBA$K6_iliski)+is.na(dataEGBA$K7_iliski)+is.na(dataEGBA$K8_iliski)+
is.na(dataEGBA$K9_iliski)+is.na(dataEGBA$K10_iliski)+is.na(dataEGBA$K11_iliski)+is.na(dataEGBA$K12_iliski)
dataEGBA$housememb=13-dataEGBA$housememb
table(dataEGBA$il)
###SET UP for Mplus
mplusdata=dataEGBA
mplusdata$age=2011-mplusdata$dogumyili
#hist(mplusdata$total_income)
#summary(mplusdata$total_income)
mplusdata$total_income=mplusdata$total_income/1000
mplusdata$incomePC=(mplusdata$total_income/mplusdata$housememb)
mplusdata$incomeTRANS=mplusdata$total_income
mplusdata$incomeTRANS=ifelse(mplusdata$incomeTRANS>quantile(mplusdata$total_income,.95),
quantile(mplusdata$total_income,.95),mplusdata$total_income)
mplusdata$incomePCTRANS=mplusdata$incomePC
mplusdata$incomePCTRANS=ifelse(mplusdata$incomePCTRANS>quantile(mplusdata$incomePCTRANS,.95),
quantile(mplusdata$incomePCTRANS,.95),mplusdata$incomePCTRANS)
library(psych)
describe(mplusdata$incomePCTRANS)
describe(mplusdata$incomePC*1000)
#grand mean center income
mplusdata$incomeTRANS=mplusdata$incomeTRANS-mean(mplusdata$incomeTRANS,na.rm=T)
mplusdata$incomePCTRANS=mplusdata$incomePCTRANS-mean(mplusdata$incomePCTRANS,na.rm=T)
mplusdata$age=mplusdata$age-mean(mplusdata$age,na.rm=T)
table(mplusdata$housememb)
mean(mplusdata$housememb)
mplusdata$housememb=mplusdata$housememb-4
mplusdata$FEM=ifelse(mplusdata$cinsiyet2=="Female",1,0)
mplusdata$FEM=as.factor(mplusdata$FEM)
head(mplusdata)
mplusdata=mplusdata[,c("id1","il","outcome1","yod","age","incomePCTRANS","housememb","FEM")]
head(mplusdata)
dataEGBA2=dataEGBA[!is.na(dataEGBA$outcome1),]
table(dataEGBA2$yod)
dataEGBA2$age=2011-dataEGBA2$dogumyili
hist(dataEGBA2$total_income)
summary(dataEGBA2$total_income)
#delete outlier income
dataEGBA2$incomePC=(dataEGBA2$total_income/dataEGBA2$housememb)
#dataEGBA3=dataEGBA2[dataEGBA2$incomePC<(36000),]
#sum(dataEGBA2$incomePC>36000)
dataEGBA2$incomePC=dataEGBA2$incomePC/1000
dataEGBA2$incomeTRANS=dataEGBA2$total_income
dataEGBA2$incomeTRANS=ifelse(dataEGBA2$incomeTRANS>quantile(dataEGBA2$total_income,.95),
quantile(dataEGBA2$total_income,.95),dataEGBA2$total_income)
dataEGBA2$incomePCTRANS=dataEGBA2$incomePC
dataEGBA2$incomePCTRANS=ifelse(dataEGBA2$incomePCTRANS>quantile(dataEGBA2$incomePCTRANS,.95),
quantile(dataEGBA2$incomePCTRANS,.95),dataEGBA2$incomePCTRANS)
hist(dataEGBA2$incomeTRANS)
hist(dataEGBA2$incomePCTRANS)
desc1=describe(dataEGBA2[,c("outcome1","age","incomePCTRANS","sege","housememb","s1")],trim = 0.05,type=3)
names(dataEGBA2)
dataEGBA$outcome1
dataEGBA2=dataEGBA[!is.na(dataEGBA$outcome1),]
table(dataEGBA2$yod)
dataEGBA2$age=2011-dataEGBA2$dogumyili
hist(dataEGBA2$total_income)
summary(dataEGBA2$total_income)
#delete outlier income
dataEGBA2$incomePC=(dataEGBA2$total_income/dataEGBA2$housememb)
#dataEGBA3=dataEGBA2[dataEGBA2$incomePC<(36000),]
#sum(dataEGBA2$incomePC>36000)
dataEGBA2$incomePC=dataEGBA2$incomePC/1000
dataEGBA2$incomeTRANS=dataEGBA2$total_income
dataEGBA2$incomeTRANS=ifelse(dataEGBA2$incomeTRANS>quantile(dataEGBA2$total_income,.95),
quantile(dataEGBA2$total_income,.95),dataEGBA2$total_income)
dataEGBA2$incomePCTRANS=dataEGBA2$incomePC
dataEGBA2$incomePCTRANS=ifelse(dataEGBA2$incomePCTRANS>quantile(dataEGBA2$incomePCTRANS,.95),
quantile(dataEGBA2$incomePCTRANS,.95),dataEGBA2$incomePCTRANS)
hist(dataEGBA2$incomeTRANS)
hist(dataEGBA2$incomePCTRANS)
names(dataEGBA2)
desc1=describe(dataEGBA2[,c("outcome1","age","incomePCTRANS","housememb","s1")],trim = 0.05,type=3)
hist(dataEGBA2$housememb)
describeBy(dataEGBA2$outcome1,dataEGBA2$cinsiyet2)
describeBy(dataEGBA2$s1,dataEGBA2$cinsiyet2)
table(dataEGBA2$il)
clustersize=as.numeric(table(dataEGBA2$il))
describe(clustersize)
describe(iller$sege)
#ML and REML ICC
require(multilevel)
summary(dataEGBA2$outcome1)
model<-lme(outcome1~1,random=~1|il,data=dataEGBA2)
comp=as.numeric(VarCorr(model))
remlicc=comp[1]/(comp[1]+comp[2])
model<-lme(outcome1~1,random=~1|il,data=dataEGBA2,method="ML")
comp=as.numeric(VarCorr(model))
mlicc=comp[1]/(comp[1]+comp[2])
summary(model)
#
table(dataEGBA2$cinsiyet2)
dataEGBA2$FEM=ifelse(dataEGBA2$cinsiyet2=="Female",1,0)
dataEGBA2$FEM=as.factor(dataEGBA2$FEM)
hist(dataEGBA2$outcome1)
dataEGBA2$housememb2=ifelse(dataEGBA2$housememb>10,10,dataEGBA2$housememb)
model1<-lme(outcome1~yod+age+incomePCTRANS+sege+FEM+housememb,random=~1|il,data=dataEGBA2,method="ML")
model1<-lme(outcome1~yod+age+incomePCTRANS+FEM+housememb,random=~1|il,data=dataEGBA2,method="ML")
summary(model1)
head(dataEGBA2)
dataEGBA2$binitem1=as.factor(ifelse(dataEGBA2$s1==4,1,0))
dataEGBAyocad=dataEGBA2[,c("binitem1","yod","age","incomePCTRANS","FEM","housememb","il","id1")]
dataEGBAyocad=na.omit(dataEGBAyocad)
library(lme4)
modellog=lmer(formula = binitem1 ~ yod+age+incomePCTRANS+FEM+housememb +
(1 | il) , family = binomial(link = "logit"),data=dataEGBA2)
modellog=lmer(formula = binitem1 ~ yod+age+incomePCTRANS+FEM+(1 | il) , family = binomial,data=dataEGBA2)
modellog=glmer(formula = binitem1 ~ yod+age+incomePCTRANS+FEM+(1 | il) , family = binomial,data=dataEGBA2)
summary(modellog)
dataEGBAyocad=dataEGBA2[,c("binitem1","yod","age","incomePCTRANS","FEM","il","id1")]
dataEGBAyocad=na.omit(dataEGBAyocad)
library(lme4)
library(lme4)
modellog=glmer(formula = binitem1 ~ yod+age+incomePCTRANS+FEM+(1 | il) , family = binomial,data=dataEGBAyocad)
summary(modellog)
write.csv(dataEGBAyocad,file="dataEGBAyocad.csv")
#Veri seti iki WorldBANK Turkiye
dataEGBA=read.csv("dataEGBAyocad.csv")
library(lme4)
modellog=glmer(formula = binitem1 ~ yod+age+incomePCTRANS+FEM+(1 | il) , family = binomial,data=dataEGBA)
names(dataEGBA)
dataEGBA$ilID=as.numeric(dataEGBA$il)
dataEGBA$ilID
dataEGBA$il==NULL
dataEGBA$il=NULL
names(dataEGBA)
#Veri seti iki WorldBANK Turkiye
write.csv(dataEGBA,file="dataEGBAyocad.csv")
#Veri seti iki WorldBANK Turkiye
dataEGBA=read.csv("dataEGBAyocad.csv")
#Veri seti iki WorldBANK Turkiye
dataEGBA=read.csv("dataEGBAyocad.csv",header = F)
names(dataEGBA)=c("binitem1","yod","age","incomePCTRANS","FEM","id1","ilID")
head(dataEGBA)
modellog=glmer(formula = binitem1 ~ yod+age+incomePCTRANS+FEM+(1 | ilID) , family = binomial,data=dataEGBA)
summary(modellog)
modellogMPLUS=glmer(formula = binitem1 ~ yod+incomePCTRANS+(1 | ilID) , family = binomial,data=dataEGBA)
summary(modellogMPLUS)
# UC duzeyli model West, Welch ve Galecki s.162
require(WWGbook)
library("WWGbook", lib.loc="~/R/win-library/3.4")
# UC duzeyli model West, Welch ve Galecki s.162
rm(list=ls())
attach(classroom)
model4.1.fit <- lme(mathgain ~ 1, random = ~ 1 | schoolid/classid, class, method = "REML")
require(nlme)
model4.1.fit <- lme(mathgain ~ 1, random = ~ 1 | schoolid/classid, class, method = "REML")
data(classroom)
classroomDATA=data(classroom)
classroomDATA
classroomDATA=data("classroom")
classroomDATA
WWGbook::classroom
classroomDATA=WWGbook::classroom
model4.1.fit <- lme(mathgain ~ 1, random = ~ 1 | schoolid/classid, data=classroomDATA, method = "REML")
summary(mode14.1.fit)
summary(model4.1.fit)
model4.1A.fit <- lme(mathgain ~ 1, random = ~1 | schoolid, data = class, method = "REML")
model4.1A.fit <- lme(mathgain ~ 1, random = ~1 | schoolid, data=classroomDATA, method = "REML")
anova(model4.1.fit, model4.1A.fit)
model4.2.fit <- lme(mathgain ~ mathkind + sex + minority + ses, random = ~1 | schoolid/classid,
data=classroomDATA, na.action = "na.omit", method = "REML")
summary(mode14.2.fit)
summary(model4.2.fit)
> # Model 4.1: ML estimation with lme(). >
model4.1.ml.fit <- lme(mathgain ~ 1, random = ~1 | schoolid/classid, class, method = "ML")
> # Model 4.1: ML estimation with lme(). >
model4.1.ml.fit <- lme(mathgain ~ 1, random = ~1 | schoolid/classid, data=classroomDATA, method = "ML")
# Model 4.2: ML estimation with lme(). >
model4.2.ml.fit <- lme(mathgain ~ mathkind + sex + minority + ses, random = ~1 | schoolid/classid,
data=classroomDATA, na.action = "na.omit", method = "ML")
anova(model4.1.ml.fit, model4.2.ml.fit)
model4.3.fit <- update(model4.2.fit, fixed = ~ mathkind + sex + minority + ses + yearstea + mathprep + mathknow)
summary(model4.3.fit)
model4.4.fit <- update(model4.2.fit, fixed = ~ mathkind + sex + minority + ses + housepov)
summary(model4.4.fit)
model4.1.fit <- lme(mathgain ~ 1, random = ~ 1 | schoolid/classid, data=classroomDATA, method = "REML")
summary(model4.1.fit)
model4.1A.fit <- lme(mathgain ~ 1, random = ~1 | schoolid, data=classroomDATA, method = "REML")
anova(model4.1.fit, model4.1A.fit)
model4.2.fit <- lme(mathgain ~ mathkind, random = ~1 | schoolid/classid,
data=classroomDATA, na.action = "na.omit", method = "REML")
summary(model4.2.fit)
> # Model 4.1: ML estimation with lme(). >
model4.1.ml.fit <- lme(mathgain ~ 1, random = ~1 | schoolid/classid, data=classroomDATA, method = "ML")
# Model 4.2: ML estimation with lme(). >
model4.2.ml.fit <- lme(mathgain ~ mathkind, random = ~1 | schoolid/classid,
data=classroomDATA, na.action = "na.omit", method = "ML")
anova(model4.1.ml.fit, model4.2.ml.fit)
model4.3.fit <- update(model4.2.fit, fixed = ~ mathkind + mathknow)
summary(model4.3.fit)
model4.4.fit <- update(model4.2.fit, fixed = ~ mathkind + mathknow + housepov)
summary(model4.4.fit)
names(classroomDATA)
classroomDATAmplus=classroomDATA[,c("mathgain","mathkind","mathknow","housepov","classid","schoolid","childid")]
write.csv(classroomDATAmplus,file="classroomDATAmplus.csv")
summary(classroomDATAmplus)
classroomDATAmplus[is.na(classroomDATAmplus)]= (-99)
write.csv(classroomDATAmplus,file="classroomDATAmplus.csv")
write.csv(classroomDATAmplus,file="classroomDATAmplus.csv",row.names = F,col.names = F)
#write.csv(classroomDATAmplus,file="classroomDATAmplus.csv",row.names = F,col.names = F)
write.table( classroomDATAmplus, sep=",",  col.names=FALSE, file="classroomDATAmplus.csv",row.names = F)
classroomDATAmplus=classroomDATA[,c("mathgain","mathkind","mathknow","housepov","classid","schoolid","childid")]
classroomDATAmplus=na.omit(classroomDATAmplus)
#classroomDATAmplus[is.na(classroomDATAmplus)]= (-99)
#write.csv(classroomDATAmplus,file="classroomDATAmplus.csv",row.names = F,col.names = F)
write.table( classroomDATAmplus, sep=",",  col.names=FALSE, file="classroomDATAmplus.csv",row.names = F)
model4.4.fit <- update(model4.2.fit, fixed = ~ mathkind + mathknow + housepov,data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.4.fit)
model4.2.ml.mplus <- lme(mathgain ~ mathkind + mathknow + housepov, random = ~mathknow | schoolid/classid,
data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.2.ml.mplus)
#further
model4.2.ml.rs <- lme(mathgain ~ mathkind + mathknow + housepov, random = ~mathknow | schoolid/classid,
data=classroomDATA, na.action = "na.omit", method = "ML")
model4.2.ml.rs2 <- lme(mathgain ~ mathkind + mathknow + housepov, random = ~mathkind+mathknow | schoolid/classid,
data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.2.ml.rs2)
model4.2.ml.rs2 <- lme(mathgain ~ mathkind + mathknow + housepov, random = ~mathkind | schoolid/classid,
data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.2.ml.rs2)
#further
model4.2.ml.rs <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~1, classid = ~mathkind,
#further
model4.2.ml.rs <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~1, classid = ~mathkind),
data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.2.ml.rs)
model4.2.ml.rs2 <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~mathknow, classid = ~mathkind),
data=classroomDATA, na.action = "na.omit", method = "ML")
#further
model4.2.ml.rs <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~mathkind, classid = ~mathkind),
data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.2.ml.rs)
model4.2.ml.rs2 <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~1, classid = ~mathkind),
data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.2.ml.rs2)
model4.2.ml.rs3 <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~mathknow, classid = ~1),
data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.2.ml.rs3)
model4.2.ml.rs4 <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~mathknow, classid = ~mathkind),
data=classroomDATA, na.action = "na.omit", method = "ML")
model4.2.ml.rs4 <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~mathknow+mathkind, classid = ~1),
data=classroomDATA, na.action = "na.omit", method = "ML")
summary(model4.2.ml.rs4)
model4.2.ml.rs5 <- lme(mathgain ~ mathkind + mathknow + housepov, random = list(schoolid = ~mathknow+mathkind, classid = ~mathkind),
data=classroomDATA, na.action = "na.omit", method = "ML")
#datayi oku BASS:
dataTFGA=read.csv("Balanced2L.csv")
#write.csv2(dataTFGA,file="BASS2016_CAB_csv2.csv",row.names=F)
# data 600 sira ve 5 sutuna sahip
head(dataTFGA)
#data ozet
summary(dataTFGA)
#0n-test son-test dagilim grafigi
hist(dataTFGA$CABpost)
hist(dataTFGA$CABpre)
#ozet icin paket
library(psych)
#sontest ozet
describe(dataTFGA$CABpost)
describeBy(dataTFGA$CABpost,dataTFGA$condition)
#on test ozet
describe(dataTFGA$CABpre)
# basiklik carpiklik
library(moments)
skewness(dataTFGA$CABpost)
kurtosis(dataTFGA$CABpost)
kurtosis(dataTFGA$CABpost)-3
kurtosis(dataTFGA$CABpre)
kurtosis(dataTFGA$CABpre)-3
# ortalamaya gore merkezilestirme GOM ontest
dataTFGA$grandcnt=dataTFGA$CABpre-mean(dataTFGA$CABpre)
#regresyon modeli
model0=lm(CABpost~grandcnt+condition,data=dataTFGA)
summary(model0)
require(car)
library(MASS)
#Regresyon Hatalarin Dagilimi
sresid <- studres(model0)
hist(sresid, freq=FALSE,
main="Regresyon Hatalarin Dagilimi")
xfit<-seq(min(sresid),max(sresid),length=40)
yfit<-dnorm(xfit)
lines(xfit, yfit)
##NULL/ BOS model
require(nlme)
require(multilevel)
nullmodelREML<-lme(CABpost~1,random=~1|teacherid, data=dataTFGA,method = "REML",
control=list(opt="optim"),na.action = na.omit)
summary(nullmodelREML)
#toplam varyans
nop=as.numeric(VarCorr(nullmodelREML)[2])+as.numeric(VarCorr(nullmodelREML)[1])
nop
var(dataTFGA$CABpost)
#ML and REML ICC
model<-lme(CABpost~1,random=~1|teacherid,data=dataTFGA)
comp=as.numeric(VarCorr(model))
remlicc=comp[1]/(comp[1]+comp[2])
remlicc
model<-lme(CABpost~1,random=~1|teacherid,data=dataTFGA,method="ML")
comp=as.numeric(VarCorr(model))
mlicc=comp[1]/(comp[1]+comp[2])
mlicc
#Raudenbush Bryk 2002 pg 53 REML carpi duzeltme faktoru gamma=1
J=length(unique(dataTFGA$teacherid))
remlicc*(J-1)/J
# Rassal Kesim modeli
model1REML<-lme(CABpost~grandcnt+condition,random=~1|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit)
summary(model1REML)
#varyans homojenligi, varyanslarin homojen olmadigi durumda tahminleyicide modifikasyon gerekir
plot(model1REML)
#serbestlik derecesi n*J= 12*50=600
# 2. duzey : J-m0-p2= 50-1-1 (Pinhero&Bates s91 Q=1,m0=1(intercept),m1=50,m2=600,p1=1,p2=1)
# 1. duzey " (TÃ¼m orneklem)-(J+p) = 600-51= 549. Snijders ve Boskere gore 600-1-1 farkeder mi?
anova(model1REML)
model1ML<-lme(CABpost~grandcnt+condition,random=~1|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit,method="ML")
summary(model1ML)
nullmodelML<-lme(CABpost~1,random=~1|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit,method="ML")
# Likelihood Ratio Test
anova(nullmodelML,model1ML)
#rassal kesim modeli ile toplam varyans
p1=as.numeric(VarCorr(model1)[2])+as.numeric(VarCorr(model1)[1])
p1
#rassal kesim modeli ile bos modele nazaran aciklanan varyans, pseudo R2
global1= round(((nop-p1)/nop),3)*100
global1
#rassal kesim egim modeli
model1aREML<-lme(CABpost~grandcnt+condition,random=~grandcnt|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit)
summary(model1aREML)
#rassal kesim modeli ile toplam varyans
p1=as.numeric(VarCorr(model1REML)[2])+as.numeric(VarCorr(model1REML)[1])
p1
#rassal kesim modeli ile bos modele nazaran aciklanan varyans, pseudo R2
global1= round(((nop-p1)/nop),3)*100
global1
#rassal kesim egim modeli
model1aREML<-lme(CABpost~grandcnt+condition,random=~grandcnt|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit)
summary(model1aREML)
VarCorr(model1aREML)
VarCorr(model1REML)
#varyans homojenligi, varyanslarin homojen olmadigi durumda tahminleyicide modifikasyon gerekir
plot(model1aREML)
# rassal egim varyansini goz ardi ederek pseudo R2
p1a=as.numeric(VarCorr(model1aREML)[3])+as.numeric(VarCorr(model1aREML)[1])
global1a= round(((nop-p1a)/nop),3)*100
#deviance test , rassal egim varyansi
anova(model1REML,model1aREML)
#deviance test ML , rassal egim varyansi
model1aML<-lme(CABpost~grandcnt+condition,random=~grandcnt|teacherid, data=dataTFGA,
control=list(opt="optim"),na.action = na.omit,method = "ML")
#deviance test , rassal egim varyansi
anova(model1ML,model1aML)
# egim grafikleri
dataTFGA2=dataTFGA[order(dataTFGA$condition),]
dataTFGA2$id2=rep(1:50,each=12)
library(lattice)
xyplot(CABpost~grandcnt|as.factor(id2),data=dataTFGA2,
type=c("p","g","r"),col="black",col.line="black",
xlab="On-test",
ylab="Son-test")
#group mean centering/ kume ortalamasi etrafinda merkezilestirme KOM
require(plyr)
dataTFGA3=dataTFGA
dataTFGA3=ddply(dataTFGA3, "teacherid", transform,  pregmean= mean(CABpre))
dataTFGA3$grpcnt=with(dataTFGA3,CABpre-pregmean)
head(dataTFGA3)
#KOM analizleri rassal kesim
model1b<-lme(CABpost~pregmean+grpcnt+condition,random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit)
summary(model1b)
VarCorr(model1b)
# Raporlanmamis KOM analizleri rassal kesim egim
model1c<-lme(CABpost~pregmean+grpcnt+condition,random=~grpcnt|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit)
summary(model1c)
VarCorr(model1c)
#context effect Esitlik 32
model1e<-lme(CABpost~pregmean+CABpre,random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit)
summary(model1e)
VarCorr(model1e)
##context effect Esitlik 33
model1f<-lme(CABpost~pregmean+grpcnt,random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit)
summary(model1f)
VarCorr(model1f)
##Assumption Check Varsayim kontrolu model1 a
par(mfrow=c(1,1))
plot(model1aREML,xlab="Tahmin",ylab="Standardize Hata")
qqnorm(resid(model1aREML), main="Duzey-1 hata",xlab="teorik deger",ylab = "deger")
qqnorm(ranef(model1aREML)$`(Intercept)`, main="Kesim hata",xlab="teorik deger",ylab = "deger")
qqnorm(ranef(model1aREML)$grandcnt, main="Egim hata",xlab="teorik deger",ylab = "deger")
# Interaction?
summary(lme(CABpost~condition+CABpre+CABpre*condition,random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit))
summary(lme(CABpost~condition+pregmean+grpcnt+pregmean*condition+grpcnt*condition,
random=~1|teacherid, data=dataTFGA3,
control=list(opt="optim"),na.action = na.omit))
#Veri seti iki WorldBANK Turkiye
dataEGBA=read.csv("dataEGBAyocad.csv",header = F)
names(dataEGBA)=c("binitem1","yod","age","incomePCTRANS","FEM","id1","ilID")
head(dataEGBA)
library(lme4)
modellog=glmer(formula = binitem1 ~ yod+age+incomePCTRANS+FEM+(1 | ilID) , family = binomial,data=dataEGBA)
summary(modellog)
modellogMPLUS=glmer(formula = binitem1 ~ yod+incomePCTRANS+(1 | ilID) , family = binomial,data=dataEGBA)
summary(modellogMPLUS)
summary(modellog)
exp(0.237758)
exp(0.241)
